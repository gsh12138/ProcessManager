@using ProcessManager.Models
@using ProcessBasice.ChangLiang
@model ProcessListInfo
@{
    ViewBag.Title = "Index";
    ViewBag.user = Model.userxm;
    ViewBag.userid = Model.userid;
    ViewBag.userbm = Model.userbm;
}




<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>我发起的表单</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Dashboard_1", "Dashboards")">主页</a>
            </li>
            <li class="active">
                <strong>我发起的表单</strong>
            </li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="wrapper wrapper-content animated fadeInUp">

            <div class="ibox">
                <div class="ibox-title">
                    <h5>所有我发起的表单</h5>
                </div>
                <div class="ibox-content">
                    <div class="row m-b-sm m-t-sm">
                        <div class="col-md-1">
                            <button type="button" id="loading-example-btn" class="btn btn-white btn-sm"><i class="fa fa-refresh"></i> 刷新</button>
                        </div>
                        <div class="col-md-11">
                            <div class="input-group">
                                <input type="text" placeholder="搜索(表单号)" class="input-sm form-control"> <span class="input-group-btn">
                                    <button type="button" class="btn btn-sm btn-primary"> 搜索!</button>
                                </span>
                            </div>
                        </div>
                    </div>

                    <div class="project-list">

                        <table class="table table-hover">
                            <tbody>
                                @{ foreach (ProcessManager.Models.ProcessInfo info in Model.linfo) {
                                <tr>
                                    <td class="project-status">
                                        @switch (info.predefine.State) {
                                            case PredefineState.FINISH:
                                                <span class="label label-success">@info.processstate</span>
                                                break;
                                            case PredefineState.BACK:
                                                <span class="label label-warning">@info.processstate</span>

                                                break;
                                            case PredefineState.RETURN:
                                                <span class="label label-danger">@info.processstate</span>
                                                break;
                                            case PredefineState.PROCESSING:
                                                <span class="label label-primary">@info.processstate</span>
                                                break;
                                            case PredefineState.JIAQIAN:
                                                <span class="label label-warning">@info.processstate</span>
                                                break;
                                            case PredefineState.XIANQIAN:
                                                break;
                                            default:
                                                break;
                                        }
                                        
                                    </td>
                                    <td class="project-title">
                                        <a href="/Form/@info.url/@info.predefine.Bid">@info.leixing:@info.predefine.Bid</a>
                                        <br />
                                        
                                    </td>
                                    <td class="project-completion">
                                        @{
                                            foreach (ProcessProcessModel process in info.lprocess) {
                                                switch (process.State) {
                                                    case ProcessState.FINISH:
                                                        <span data-pid="@process.Pid" data-order="@process.Order" class="label label-success">@process.Handler</span>
                                                        break;
                                                    case ProcessState.BACK:
                                                        <span data-pid="@process.Pid" data-order="@process.Order" class="label label-warning">@process.Handler</span>
                                                        break;
                                                    case ProcessState.RETURN:
                                                        <span data-pid="@process.Pid" data-order="@process.Order" class="label label-danger">@process.Handler</span>
                                                        break;
                                                    case ProcessState.DEFINE:
                                                        if (process.Handler.Equals(info.predefine.Handler)) {
                                                            <span data-pid="@process.Pid" data-order="@process.Order" class="label label-primary">@process.Handler</span>
                                                        }
                                                        else {
                                                            <span data-pid="@process.Pid" data-order="@process.Order" class="label label-default">@process.Handler</span>
                                                        }
                                                        break;
                                                    case ProcessState.BEGIN:
                                                        <span data-pid="@process.Pid" data-order="@process.Order" class="label label-info">@process.Handler</span>
                                                        break;
                                                    case ProcessState.JIAQIAN:
                                                        <span data-pid="@process.Pid" data-order="@process.Order" class="label label-warning">@process.Handler</span>
                                                        break;
                                                    case ProcessState.XIANQIAN:
                                                        break;
                                                    default:
                                                        break;
                                                }
                                                if (info.lprocess.IndexOf(process) != info.lprocess.Count - 1) {
                                                    <span class="glyphicon glyphicon-arrow-right"></span>
                                                }
                                            }
                                            
                                        }
                                    </td>
                                    <td class="project-actions">
                                        <span class="label label-info" style="float: right">@info.predefinestate</span>
                                        
                                </tr>
                                        }
                                    }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>



    @*<div>
        @{
            foreach (ProcessManager.Models.ProcessInfo info in Model.linfo)
            {
                <div class="media">
                    <div class="media-left">

                        @switch (info.predefine.State)
                        {
                            case PredefineState.FINISH:
                                <p style="color: green" class="glyphicon glyphicon-ok"></p>

                                break;
                            case PredefineState.BACK:
                                <p style="color: sandybrown" class="glyphicon glyphicon-refresh"></p>

                                break;
                            case PredefineState.RETURN:
                                <p style="color: red" class="glyphicon glyphicon-repeat"></p>
                                break;
                            case PredefineState.PROCESSING:
                                <p style="color: deepskyblue" class="glyphicon glyphicon-pencil"></p>
                                break;
                            case PredefineState.JIAQIAN:
                                <p style="color: darkmagenta" class="glyphicon glyphicon-plus-sign"></p>
                                break;
                            case PredefineState.XIANQIAN:
                                break;
                            default:
                                break;
                        }
                        <span class="label label-primary" style="float: right">@info.processstate</span>

                    </div>

                    <div class="media-body">
                        <h4 class="media-heading"><a href="@info.url/@info.predefine.Bid">@info.leixing:@info.predefine.Bid</a></h4>
                        @{
                            foreach (ProcessProcessModel process in info.lprocess)
                            {
                                switch (process.State)
                                {
                                    case ProcessState.FINISH:
                                        <button data-pid="@process.Pid" data-order="@process.Order" class="btn btn-success">@process.Handler</button><input type="hidden" value="@process.pizhu" />
                                        break;
                                    case ProcessState.BACK:
                                        <button data-pid="@process.Pid" data-order="@process.Order" class="btn btn-warning">@process.Handler</button><input type="hidden" value="@process.pizhu" />
                                        break;
                                    case ProcessState.RETURN:
                                        <button data-pid="@process.Pid" data-order="@process.Order" class="btn btn-danger">@process.Handler</button><input type="hidden" value="@process.pizhu" />
                                        break;
                                    case ProcessState.DEFINE:
                                        if (process.Handler.Equals(info.predefine.Handler))
                                        {
                                            <button data-pid="@process.Pid" data-order="@process.Order" class="btn btn-primary">@process.Handler</button><input type="hidden" value="@process.pizhu" />
                                        }
                                        else
                                        {
                                            <button data-pid="@process.Pid" data-order="@process.Order" class="btn btn-default">@process.Handler</button><input type="hidden" value="@process.pizhu" />
                                        }
                                        break;
                                    case ProcessState.BEGIN:
                                        <button data-pid="@process.Pid" data-order="@process.Order" class="btn btn-info">@process.Handler</button><input type="hidden" value="@process.pizhu" />
                                        break;
                                    case ProcessState.JIAQIAN:
                                        <button data-pid="@process.Pid" data-order="@process.Order" class="btn btn-warning">@process.Handler</button><input type="hidden" value="@process.pizhu" />
                                        break;
                                    case ProcessState.XIANQIAN:
                                        break;
                                    default:
                                        break;
                                }
                                if (info.lprocess.IndexOf(process) != info.lprocess.Count - 1)
                                {
                                    <span class="glyphicon glyphicon-arrow-right"></span>
                                }
                            }
                            <span class="label label-info" style="float: right">@info.predefinestate</span>
                        }
                    </div>

                </div>
                            }
        }*@
        @*<a href="#" class="btn btn-success">张张三</a><input type="hidden"/><span class="glyphicon glyphicon-arrow-right"></span>
            <a href="#" class="btn btn-success">李四</a><span class="glyphicon glyphicon-arrow-right"></span>
            <a href="#" class="btn btn-primary">王五</a><span class="glyphicon glyphicon-arrow-right"></span>
            <a href="#" class="btn btn-info">赵柳</a><span class="glyphicon glyphicon-arrow-right"></span>
            <a href="#" class="btn btn-info">张三</a><span class="glyphicon glyphicon-arrow-right"></span>
            <a href="#" class="btn btn-info">张三</a>*@
    <!--</div>-->
</div>

@*
    @section scripts
    {
        <script>
            $('.media').on('mouseover', function () {
                $(this).addClass('mover');
                $(this).css('background-color', 'lightblue');
                $(this).find('h4').children('a').css('color', 'black');
            }).on('mouseleave', function () {
                $(this).removeClass('mover');
                $(this).css('background-color', 'whitesmoke');
                $(this).find('h4').children('a').css('color', '');
            });
            $('.media-body button.btn').on('mouseover', function () {
                let ht = $(this).next('input').val();
                let xx = $('<div></div>').addClass('alert').addClass('alert-success').attr('role', 'alert')
                            .html(ht);
                if (ht != '') {
                    $(this).append(xx);
                }
            }).on('mouseleave', function () {
                $(this).children('div.alert').remove();
            });
            $('.media-body button.btn').each(function () {
                if ($(this).html() == "会签") {
                    $(this).unbind();
                    var that = this;
                    let pid = $(this).attr('data-pid');
                    let order = $(this).attr('data-order');
                    $(this).on('click', function () {

                        $.post('/api/HuiqianApi/Index/'+pid+'/'+order, function (data) {
                            var xx = $('<div></div>').addClass('alert').addClass('alert-success').attr('role', 'alert');

                            $.each(data,function (index, ele) {
                                let bt = $('<button></button>').addClass('btn').html(ele.Hanlder);
                                if (ele.State == 2) {
                                    bt.addClass('btn-success');
                                } else if (ele.State == 3) {
                                    bt.addClass('btn-default');
                                } else {
                                    bt.addClass('btn-danger');
                                }
                                xx.append(bt);
                            });
                            $(that).append(xx);
                        });
                    }).on('blur', function () {
                        $(this).children('div.alert').remove();
                    });
                };
            });

        </script>
    }
*@